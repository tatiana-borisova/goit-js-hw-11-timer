{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","divEl","document","querySelector","daysEl","hoursEl","minsEl","secsEl","textEl","start","finishTime","setInterval","currentTime","Date","now","deltaTime","time","getTimeComponents","updateClock","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","countdownTimer"],"mappings":";AAAA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,KAAO,CACVC,MAAOC,SAASC,cAAc,YAC9BC,OAAQF,SAASC,cAAc,uBAC/BE,QAASH,SAASC,cAAc,wBAChCG,OAAQJ,SAASC,cAAc,uBAC/BI,OAAQL,SAASC,cAAc,uBAC/BK,OAAQN,SAASC,cAAc,UAE5BL,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbU,KAAAA,QAGPA,QACQC,MAAAA,EAAa,KAAKX,WACxBY,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MACnBC,EAAYL,EAAaE,EACzBI,EAAO,KAAKC,kBAAkBF,GAC/BG,KAAAA,YAAYF,IAChB,KAGLC,kBAAkBD,GAMT,MAAA,CAAEG,KALI,KAAKC,IAAIC,KAAKC,MAAMN,EAAQ,QAK1BO,MAJD,KAAKH,IAAIC,KAAKC,MAAON,EAAQ,MAAyB,OAI9CQ,KAHT,KAAKJ,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAGlCS,KAFf,KAAKL,IAAIC,KAAKC,MAAON,EAAQ,IAAc,OAK1DI,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCV,aAAY,KAAEC,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC3B,KAAK1B,WAAac,KAAKC,OACpBd,KAAAA,KAAKI,OAAOyB,YAAcV,EAC1BnB,KAAAA,KAAKK,QAAQwB,YAAcN,EAC3BvB,KAAAA,KAAKM,OAAOuB,YAAcL,EAC1BxB,KAAAA,KAAKO,OAAOsB,YAAcJ,GAE1BzB,KAAAA,KAAKQ,OAAOqB,YAAc,mBAKrC,MAAMC,EAAiB,IAAIlC,EAAe,CACxCE,SAAU,WACVC,WAAY,IAAIc,KAAK","file":"src.06b0dadb.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.refs = {\n      divEl: document.querySelector('#timer-1'),\n      daysEl: document.querySelector('[data-value=\"days\"]'),\n      hoursEl: document.querySelector('[data-value=\"hours\"]'),\n      minsEl: document.querySelector('[data-value=\"mins\"]'),\n      secsEl: document.querySelector('[data-value=\"secs\"]'),\n      textEl: document.querySelector('.text'),\n    };\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.start();\n  }\n\n  start() {\n    const finishTime = this.targetDate;\n    setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = finishTime - currentTime;\n      const time = this.getTimeComponents(deltaTime);\n      this.updateClock(time);\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  updateClock({ days, hours, mins, secs }) {\n    if (this.targetDate > Date.now()) {\n      this.refs.daysEl.textContent = days;\n      this.refs.hoursEl.textContent = hours;\n      this.refs.minsEl.textContent = mins;\n      this.refs.secsEl.textContent = secs;\n    } else {\n      this.refs.textEl.textContent = 'Happy New Year!';\n    }\n  }\n}\n\nconst countdownTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('January 1, 2022'),\n});\n"]}